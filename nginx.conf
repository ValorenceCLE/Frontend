user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Hide NGINX version
    server_tokens off;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Exclude 444s from logs
    map $status $loggable {
        default 1;
        444 0;
    }

    access_log /var/log/nginx/access.log main if=$loggable;

    # Rate limiting zone (10r/s per IP, burst up to 20)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain text/css application/javascript application/json;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;

        # SSL Configuration
        ssl_certificate /app/certs/deviceCert.crt;
        ssl_certificate_key /app/certs/deviceCert.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # ─────────────────────────────────────────────────────────────────────────
        # ⛔ Request filtering and bot protection
        # ─────────────────────────────────────────────────────────────────────────

        # Drop bad/malformed request methods
        if ($request_method !~ ^(GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD)$) {
            return 444;
        }

        # Drop junk/bot user agents
        if ($http_user_agent ~* (wget|curl|libwww|scan|bot|crawl|spider|Gh0st|sqlmap|fuzzer)) {
            return 403;
        }

        # Drop malformed/binary URIs
        if ($request_uri ~* "[\x00-\x1F\x7F-\xFF]") {
            return 403;
        }

        # Root directory
        root /usr/share/nginx/html;
        index index.html;

        # ─────────────────────────────────────────────────────────────────────────
        # API reverse proxy (FastAPI)
        # ─────────────────────────────────────────────────────────────────────────
        location /api/ {
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_buffering off;

            # Timeouts
            proxy_read_timeout 600s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;

            # 🔐 Apply rate limiting
            limit_req zone=api_limit burst=20 nodelay;
        }

        # ─────────────────────────────────────────────────────────────────────────
        # Static files (Vue or SPA frontend)
        # ─────────────────────────────────────────────────────────────────────────
        location / {
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
            try_files $uri $uri/ /index.html;
        }

        # 404 fallback (SPA route)
        error_page 404 /index.html;

        # 50x fallback
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
